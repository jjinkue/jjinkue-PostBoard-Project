{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/CreatePost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\"); // Retrieve the logged-in username\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5001/api/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          title,\n          content,\n          username\n        })\n      });\n      if (response.ok) {\n        navigate(\"/posts\"); // Redirect to the post list after successful creation\n      }\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"secondary\",\n          onClick: () => navigate(-1),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"TS8Yhg7i2t1mYakgzxYRrBvJzSs=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","content","setContent","navigate","username","localStorage","getItem","handleSubmit","e","preventDefault","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/CreatePost.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CreatePost: React.FC = () => {\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const navigate = useNavigate();\n    const username = localStorage.getItem(\"username\"); // Retrieve the logged-in username\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"http://localhost:5001/api/posts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                },\n                body: JSON.stringify({ title, content, username }),\n            });\n\n            if (response.ok) {\n                navigate(\"/posts\"); // Redirect to the post list after successful creation\n            }\n        } catch (error) {\n            console.error(\"Error creating post:\", error);\n        }\n    };\n\n    return (\n        <div className=\"create-post-container\">\n            <h2>Create a New Post</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"Title\"\n                    required\n                />\n                <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    placeholder=\"Content\"\n                    required\n                />\n                <div className=\"button-container\">\n                    <button type=\"submit\" className=\"primary\">Submit</button>\n                    <button type=\"button\" className=\"secondary\" onClick={() => navigate(-1)}>Go Back</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CreatePost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}