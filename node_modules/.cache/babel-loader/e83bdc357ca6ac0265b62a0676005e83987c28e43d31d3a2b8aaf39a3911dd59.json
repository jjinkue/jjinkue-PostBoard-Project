{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/EditPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_APIBASE_URL;\nconst EditPost = () => {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [title, setTitle] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.title) || \"\");\n  const [content, setContent] = useState(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.content) || \"\");\n  useEffect(() => {\n    // Fetch post details only if title or content is missing from the state\n    if (!title || !content) {\n      const fetchPost = async () => {\n        try {\n          const response = await fetch(`http://localhost:5001/api/posts/${id}`);\n          if (response.ok) {\n            const data = await response.json();\n            setTitle(data.title);\n            setContent(data.content);\n          }\n        } catch (error) {\n          console.error(\"Error fetching post:\", error);\n        }\n      };\n      fetchPost();\n    }\n  }, [id, title, content]);\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5001/api/posts/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      if (response.ok) {\n        navigate(`/post/${id}`); // Redirect to post details after update\n      } else {\n        alert(\"Failed to update the post.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"secondary\",\n          onClick: () => navigate(-1),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"ExKHyPvTfRUpCtpqA0ESNalX3Q8=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useLocation","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_APIBASE_URL","EditPost","_s","_location$state","_location$state2","id","navigate","location","title","setTitle","state","content","setContent","fetchPost","response","fetch","ok","data","json","error","console","handleUpdate","e","preventDefault","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/EditPost.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\n\nconst API_BASE_URL = process.env.REACT_APP_APIBASE_URL;\nconst EditPost: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [title, setTitle] = useState(location.state?.title || \"\");\n    const [content, setContent] = useState(location.state?.content || \"\");\n\n    useEffect(() => {\n        // Fetch post details only if title or content is missing from the state\n        if (!title || !content) {\n            const fetchPost = async () => {\n                try {\n                    const response = await fetch(`http://localhost:5001/api/posts/${id}`);\n                    if (response.ok) {\n                        const data = await response.json();\n                        setTitle(data.title);\n                        setContent(data.content);\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching post:\", error);\n                }\n            };\n\n            fetchPost();\n        }\n    }, [id, title, content]);\n\n    const handleUpdate = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(`http://localhost:5001/api/posts/${id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n                },\n                body: JSON.stringify({ title, content }),\n            });\n\n            if (response.ok) {\n                navigate(`/post/${id}`); // Redirect to post details after update\n            } else {\n                alert(\"Failed to update the post.\");\n            }\n        } catch (error) {\n            console.error(\"Error updating post:\", error);\n        }\n    };\n\n    return (\n        <div className=\"edit-post-container\">\n            <h2>Edit Post</h2>\n            <form onSubmit={handleUpdate}>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n                <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    required\n                />\n                <div className=\"button-container\">\n                    <button type=\"submit\" className=\"primary\">Update</button>\n                    <button type=\"button\" className=\"secondary\" onClick={() => navigate(-1)}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default EditPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}