{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\"); // 에러 메시지 상태 추가\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true); // 로그인 요청 시작 시 버튼 비활성화\n    setError(\"\"); // 기존 에러 메시지 초기화\n\n    try {\n      const response = await fetch(\"http://localhost:5001/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"username\", data.username);\n        window.location.href = \"/posts\"; // 로그인 후 새로고침하여 상태 반영\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"로그인 실패!\"); // 백엔드에서 받은 메시지 출력\n      }\n    } catch (error) {\n      console.error(\"로그인 에러:\", error);\n      setError(\"서버 오류로 인해 로그인에 실패했습니다.\"); // 서버 오류 처리\n    } finally {\n      setIsLoading(false); // 요청 완료 후 버튼 활성화\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"로그인 중...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-button\",\n        onClick: () => navigate(\"/register\"),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"zdX85XlUh+Rbrer0W0iuZ7ihNY8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","window","location","href","errorData","message","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\"); // 에러 메시지 상태 추가\n    const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setIsLoading(true); // 로그인 요청 시작 시 버튼 비활성화\n        setError(\"\"); // 기존 에러 메시지 초기화\n\n        try {\n            const response = await fetch(\"http://localhost:5001/api/login\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ username, password }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem(\"token\", data.token);\n                localStorage.setItem(\"username\", data.username);\n                window.location.href = \"/posts\"; // 로그인 후 새로고침하여 상태 반영\n            } else {\n                const errorData = await response.json();\n                setError(errorData.message || \"로그인 실패!\"); // 백엔드에서 받은 메시지 출력\n            }\n        } catch (error) {\n            console.error(\"로그인 에러:\", error);\n            setError(\"서버 오류로 인해 로그인에 실패했습니다.\"); // 서버 오류 처리\n        } finally {\n            setIsLoading(false); // 요청 완료 후 버튼 활성화\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <form onSubmit={handleSubmit}>\n                <h2>Login</h2>\n                {error && <p className=\"error-message\">{error}</p>} {/* 에러 메시지 UI 추가 */}\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Username\"\n                    required\n                />\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Password\"\n                    required\n                />\n                <button type=\"submit\" disabled={isLoading}>\n                    {isLoading ? \"로그인 중...\" : \"Login\"}\n                </button>\n            </form>\n            <p>\n                {\" \"}\n                <button className=\"link-button\" onClick={() => navigate(\"/register\")}>\n                    회원가입\n                </button>\n            </p>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}