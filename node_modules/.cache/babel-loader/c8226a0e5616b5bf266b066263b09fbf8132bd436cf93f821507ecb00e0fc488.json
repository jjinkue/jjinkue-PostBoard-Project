{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/PostList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_APIBASE_URL;\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (!token) {\n      alert(\"You need to log in to access posts.\");\n      navigate(\"/login\");\n    } else {\n      const fetchPosts = async () => {\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/posts`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setPosts(data);\n          }\n        } catch (error) {\n          console.error(\"Error fetching post:\", error);\n        }\n      };\n      fetchPosts();\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"post-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Views\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => navigate(`/post/${post.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.view_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.formatted_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create a New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"wlX5Q2vHIOaliHXiQZ2fNKb4Q3U=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_APIBASE_URL","PostList","_s","posts","setPosts","navigate","token","localStorage","getItem","alert","fetchPosts","response","fetch","method","headers","Authorization","ok","data","json","error","console","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","onClick","id","title","author","view_count","formatted_date","to","_c","$RefreshReg$"],"sources":["/Users/jeongjingyu/Desktop/jjinkue-myapp/src/components/PostList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\ninterface Post {\n    id: number;\n    title: string;\n    author: string;\n    view_count: number;\n    formatted_date: string;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_APIBASE_URL;\nconst PostList: React.FC = () => {\n    const [posts, setPosts] = useState<Post[]>([]);\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n\n    useEffect(() => {\n        if (!token) {\n            alert(\"You need to log in to access posts.\");\n            navigate(\"/login\");\n        }\n        else {\n            const fetchPosts = async () => {\n                try {\n                    const response = await fetch(`${API_BASE_URL}/api/posts`, {\n                        method: \"GET\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${token}`\n                        },\n                    });\n                    if (response.ok) {\n                        const data = await response.json();\n                        setPosts(data);\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching post:\", error);\n                }\n            };\n\n            fetchPosts();\n        }\n\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n    };\n\n\n    return (\n        <div>\n            <h2>Post List</h2>\n            <table className=\"post-table\">\n                <thead>\n                    <tr>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Views</th>\n                        <th>Created At</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {posts.map((post) => (\n                        <tr key={post.id} onClick={() => navigate(`/post/${post.id}`)}>\n                            <td>{post.title}</td>\n                            <td>{post.author}</td>\n                            <td>{post.view_count}</td>\n                            <td>{post.formatted_date}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"button-container\">\n                <button className=\"secondary\" onClick={handleLogout}>Logout</button>\n                <Link to=\"/create-post\">\n                    <button>Create a New Post</button>\n                </Link>\n            </div>\n\n        </div>\n    );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}